cat("Running Unadjusted Models...","\n")
## Unadjusted Models
tempout<-runmodelfunction(methyldat=betafinal,vartype=vartype,robust=robust,
varofinterest=varofinterest,adjustmentvariables=NULL,
celladjust=FALSE,Omega=NULL,phenoframe=finalpheno,maxit=maxit)
if(length(grep("pval",colnames(tempout)))>0){
if(vartype=="ExposureCat"){
pvalindexes<-grep("pval",colnames(tempout))
catnames<-colnames(tempout)[pvalindexes]
catnames<-sapply(strsplit(catnames,"_"), function(x) x[2])
lambda<-as.list(rep(NA,length(catnames)))
names(lambda)<-catnames
for(i in catnames){
tempoutv2<-tempout[,c("CpG","n",colnames(tempout)[grep(i,colnames(tempout))])]
colnames(tempoutv2)<-sapply(strsplit(colnames(tempoutv2),"_"), function(x) x[1])
templambda = qchisq(median(tempoutv2$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
lambda[i]<-templambda
tempoutplots<-na.omit(tempoutv2)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title=paste("Unadjusted_Analysis",i,sep="_"),
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
} else {
lambda = qchisq(median(tempout$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
tempoutplots<-na.omit(tempout)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title="Unadjusted_Analysis",
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
alldataout$Unadjusted<-tempout
alllambda$Unadjusted<-lambda
} else {
alldataout$Unadjusted<-NA
alllambda$Unadjusted<-NA
}
}
## Run adjusted model?
if(RunAdjusted){
## Adjusted model
cat("Running Adjusted Models...","\n")
cat("  Adjustment variables:",adjustmentvariables,"\n")
tempout<-runmodelfunction(methyldat=betafinal,vartype=vartype,robust=robust,varofinterest=varofinterest,
adjustmentvariables=adjustmentvariables,
celladjust=FALSE,Omega=NULL,phenoframe=finalpheno,maxit=maxit)
if(length(grep("pval",colnames(tempout)))>0){
if(vartype=="ExposureCat"){
pvalindexes<-grep("pval",colnames(tempout))
catnames<-colnames(tempout)[pvalindexes]
catnames<-sapply(strsplit(catnames,"_"), function(x) x[2])
lambda<-as.list(rep(NA,length(catnames)))
names(lambda)<-catnames
for(i in catnames){
tempoutv2<-tempout[,c("CpG","n",colnames(tempout)[grep(i,colnames(tempout))])]
colnames(tempoutv2)<-sapply(strsplit(colnames(tempoutv2),"_"), function(x) x[1])
templambda = qchisq(median(tempoutv2$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
lambda[i]<-templambda
tempoutplots<-na.omit(tempoutv2)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title=paste("Adjusted_Analysis",i,sep="_"),
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
} else {
lambda = qchisq(median(tempout$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
tempoutplots<-na.omit(tempout)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title="Adjusted_Analysis",
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
alldataout$Adjusted<-tempout
alllambda$Adjusted<-lambda
} else {
alldataout$Adjusted<-NA
alllambda$Adjusted<-NA
}
}
## Run model adjusting for cell types?
if(RunCellTypeAdjusted){
## Adjusted model with Cell Type
cat("Running Adjusted Models with Cell Type...","\n")
if(class(Omega)=="matrix"){
cat("  Number of cell types:",ncol(Omega),"\n")
} else {
cat("  Number of cell types:",1,"\n")
}
tempout<-runmodelfunction(methyldat=betafinal,vartype=vartype,robust=robust,varofinterest=varofinterest,
adjustmentvariables=adjustmentvariables,
celladjust=TRUE,Omega=Omega,phenoframe=finalpheno,maxit=maxit)
if(length(grep("pval",colnames(tempout)))>0){
if(vartype=="ExposureCat"){
pvalindexes<-grep("pval",colnames(tempout))
catnames<-colnames(tempout)[pvalindexes]
catnames<-sapply(strsplit(catnames,"_"), function(x) x[2])
lambda<-as.list(rep(NA,length(catnames)))
names(lambda)<-catnames
for(i in catnames){
tempoutv2<-tempout[,c("CpG","n",colnames(tempout)[grep(i,colnames(tempout))])]
colnames(tempoutv2)<-sapply(strsplit(colnames(tempoutv2),"_"), function(x) x[1])
templambda = qchisq(median(tempoutv2$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
lambda[i]<-templambda
tempoutplots<-na.omit(tempoutv2)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title=paste("Adjusted_Analysis_with_Cell_Type",i,sep="_"),
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
} else {
lambda = qchisq(median(tempout$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
tempoutplots<-na.omit(tempout)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title="Adjusted_Analysis_with_Cell_Type",
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
alldataout$AdjustedwithCellType<-tempout
alllambda$AdjustedwithCellType<-lambda
} else {
alldataout$AdjustedwithCellType<-NA
alllambda$AdjustedwithCellType<-NA
}
}
## Run sex-specific models?
if(RunSexSpecific){
finalpheno$Sex<-as.character(finalpheno$Sex)
numberF<-length(which(finalpheno$Sex=="Female"))
numberM<-length(which(finalpheno$Sex=="Male"))
## If sex is an adjustment variable, need to drop it from
## adjustment variables for sex-stratified analyses
if(!is.null(adjustmentvariables)){
if("Sex" %in% adjustmentvariables){
sexstratifiedadjustmentvars<-adjustmentvariables[-grep("Sex",adjustmentvariables)]
} else {
sexstratifiedadjustmentvars<-adjustmentvariables
}
} else {
sexstratifiedadjustmentvars<-NULL
}
if(numberF>=10){
tempsexbetas<-betafinal[,which(finalpheno$Sex=="Female")]
tempsexpheno<-finalpheno[which(finalpheno$Sex=="Female"),]
if(class(Omega)=="matrix"){
tempsexomega<-Omega[which(finalpheno$Sex=="Female"),]
} else {
tempsexomega<-Omega[which(finalpheno$Sex=="Female")]
}
if(RunUnadjusted){
cat("Running Unadjusted Models for Females...","\n")
## Unadjusted model
tempout<-runmodelfunction(methyldat=tempsexbetas,vartype=vartype,robust=robust,varofinterest=varofinterest,
adjustmentvariables=NULL,
celladjust=FALSE,Omega=NULL,phenoframe=tempsexpheno,maxit=maxit)
if(length(grep("pval",colnames(tempout)))>0){
if(vartype=="ExposureCat"){
pvalindexes<-grep("pval",colnames(tempout))
catnames<-colnames(tempout)[pvalindexes]
catnames<-sapply(strsplit(catnames,"_"), function(x) x[2])
lambda<-as.list(rep(NA,length(catnames)))
names(lambda)<-catnames
for(i in catnames){
tempoutv2<-tempout[,c("CpG","n",colnames(tempout)[grep(i,colnames(tempout))])]
colnames(tempoutv2)<-sapply(strsplit(colnames(tempoutv2),"_"), function(x) x[1])
templambda = qchisq(median(tempoutv2$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
lambda[i]<-templambda
tempoutplots<-na.omit(tempoutv2)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title=paste("Unadjusted_Analysis_Females",i,sep="_"),
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
} else {
lambda = qchisq(median(tempout$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
tempoutplots<-na.omit(tempout)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title="Unadjusted_Analysis_Females",
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
alldataout$UnadjustedFemales<-tempout
alllambda$UnadjustedFemales<-lambda
} else {
alldataout$UnadjustedFemales<-NA
alllambda$UnadjustedFemales<-NA
}
}
if(RunAdjusted){
cat("Running Adjusted Models for Females...","\n")
## Adjusted model
tempout<-runmodelfunction(methyldat=tempsexbetas,vartype=vartype,robust=robust,varofinterest=varofinterest,
adjustmentvariables=sexstratifiedadjustmentvars,
celladjust=FALSE,Omega=NULL,phenoframe=tempsexpheno,maxit=maxit)
if(length(grep("pval",colnames(tempout)))>0){
if(vartype=="ExposureCat"){
pvalindexes<-grep("pval",colnames(tempout))
catnames<-colnames(tempout)[pvalindexes]
catnames<-sapply(strsplit(catnames,"_"), function(x) x[2])
lambda<-as.list(rep(NA,length(catnames)))
names(lambda)<-catnames
for(i in catnames){
tempoutv2<-tempout[,c("CpG","n",colnames(tempout)[grep(i,colnames(tempout))])]
colnames(tempoutv2)<-sapply(strsplit(colnames(tempoutv2),"_"), function(x) x[1])
templambda = qchisq(median(tempoutv2$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
lambda[i]<-templambda
tempoutplots<-na.omit(tempoutv2)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title=paste("Adjusted_Analysis_Females",i,sep="_"),
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
} else {
lambda = qchisq(median(tempout$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
tempoutplots<-na.omit(tempout)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title="Adjusted_Analysis_Females",
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
alldataout$AdjustedFemales<-tempout
alllambda$AdjustedFemales<-lambda
} else {
alldataout$AdjustedFemales<-NA
alllambda$AdjustedFemales<-NA
}
}
if(RunCellTypeAdjusted){
cat("Running Adjusted Models with Cell Type for Females...","\n")
## Adjusted model with Cell Type
tempout<-runmodelfunction(methyldat=tempsexbetas,vartype=vartype,robust=robust,varofinterest=varofinterest,
adjustmentvariables=sexstratifiedadjustmentvars,
celladjust=TRUE,Omega=tempsexomega,phenoframe=tempsexpheno,maxit=maxit)
if(length(grep("pval",colnames(tempout)))>0){
if(vartype=="ExposureCat"){
pvalindexes<-grep("pval",colnames(tempout))
catnames<-colnames(tempout)[pvalindexes]
catnames<-sapply(strsplit(catnames,"_"), function(x) x[2])
lambda<-as.list(rep(NA,length(catnames)))
names(lambda)<-catnames
for(i in catnames){
tempoutv2<-tempout[,c("CpG","n",colnames(tempout)[grep(i,colnames(tempout))])]
colnames(tempoutv2)<-sapply(strsplit(colnames(tempoutv2),"_"), function(x) x[1])
templambda = qchisq(median(tempoutv2$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
lambda[i]<-templambda
tempoutplots<-na.omit(tempoutv2)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title=paste("Adjusted_Analysis_with_Cell_Type_Females",i,sep="_"),
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
} else {
lambda = qchisq(median(tempout$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
tempoutplots<-na.omit(tempout)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title="Adjusted_Analysis_with_Cell_Type_Females",
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
alldataout$AdjustedwithCellTypeFemales<-tempout
alllambda$AdjustedwithCellTypeFemales<-lambda
} else {
alldataout$AdjustedwithCellTypeFemales<-NA
alllambda$AdjustedwithCellTypeFemales<-NA
}
}
}
if(numberM>=10){
tempsexbetas<-betafinal[,which(finalpheno$Sex=="Male")]
tempsexpheno<-finalpheno[which(finalpheno$Sex=="Male"),]
if(class(Omega)=="matrix"){
tempsexomega<-Omega[which(finalpheno$Sex=="Male"),]
} else {
tempsexomega<-Omega[which(finalpheno$Sex=="Male")]
}
if(RunUnadjusted){
cat("Running Unadjusted Models for Males...","\n")
## Unadjusted model
tempout<-runmodelfunction(methyldat=tempsexbetas,vartype=vartype,robust=robust,varofinterest=varofinterest,
adjustmentvariables=NULL,
celladjust=FALSE,Omega=NULL,phenoframe=tempsexpheno,maxit=maxit)
if(length(grep("pval",colnames(tempout)))>0){
if(vartype=="ExposureCat"){
pvalindexes<-grep("pval",colnames(tempout))
catnames<-colnames(tempout)[pvalindexes]
catnames<-sapply(strsplit(catnames,"_"), function(x) x[2])
lambda<-as.list(rep(NA,length(catnames)))
names(lambda)<-catnames
for(i in catnames){
tempoutv2<-tempout[,c("CpG","n",colnames(tempout)[grep(i,colnames(tempout))])]
colnames(tempoutv2)<-sapply(strsplit(colnames(tempoutv2),"_"), function(x) x[1])
templambda = qchisq(median(tempoutv2$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
lambda[i]<-templambda
tempoutplots<-na.omit(tempoutv2)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title=paste("Unadjusted_Analysis_Males",i,sep="_"),
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
} else {
lambda = qchisq(median(tempout$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
tempoutplots<-na.omit(tempout)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title="Unadjusted_Analysis_Males",
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
alldataout$UnadjustedMales<-tempout
alllambda$UnadjustedMales<-lambda
} else {
alldataout$UnadjustedMales<-NA
alllambda$UnadjustedMales<-NA
}
}
if(RunAdjusted){
cat("Running Adjusted Models for Males...","\n")
## Adjusted model
tempout<-runmodelfunction(methyldat=tempsexbetas,vartype=vartype,robust=robust,varofinterest=varofinterest,
adjustmentvariables=sexstratifiedadjustmentvars,
celladjust=FALSE,Omega=NULL,phenoframe=tempsexpheno,maxit=maxit)
if(length(grep("pval",colnames(tempout)))>0){
if(vartype=="ExposureCat"){
pvalindexes<-grep("pval",colnames(tempout))
catnames<-colnames(tempout)[pvalindexes]
catnames<-sapply(strsplit(catnames,"_"), function(x) x[2])
lambda<-as.list(rep(NA,length(catnames)))
names(lambda)<-catnames
for(i in catnames){
tempoutv2<-tempout[,c("CpG","n",colnames(tempout)[grep(i,colnames(tempout))])]
colnames(tempoutv2)<-sapply(strsplit(colnames(tempoutv2),"_"), function(x) x[1])
templambda = qchisq(median(tempoutv2$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
lambda[i]<-templambda
tempoutplots<-na.omit(tempoutv2)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title=paste("Adjusted_Analysis_Males",i,sep="_"),
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
} else {
lambda = qchisq(median(tempout$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
tempoutplots<-na.omit(tempout)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title="Adjusted_Analysis_Males",
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
alldataout$AdjustedMales<-tempout
alllambda$AdjustedMales<-lambda
} else {
alldataout$AdjustedMales<-NA
alllambda$AdjustedMales<-NA
}
}
if(RunCellTypeAdjusted){
cat("Running Adjusted Models with Cell Type for Males...","\n")
## Adjusted model with Cell Type
tempout<-runmodelfunction(methyldat=tempsexbetas,vartype=vartype,robust=robust,varofinterest=varofinterest,
adjustmentvariables=sexstratifiedadjustmentvars,
celladjust=TRUE,Omega=tempsexomega,phenoframe=tempsexpheno,maxit=maxit)
if(length(grep("pval",colnames(tempout)))>0){
if(vartype=="ExposureCat"){
pvalindexes<-grep("pval",colnames(tempout))
catnames<-colnames(tempout)[pvalindexes]
catnames<-sapply(strsplit(catnames,"_"), function(x) x[2])
lambda<-as.list(rep(NA,length(catnames)))
names(lambda)<-catnames
for(i in catnames){
tempoutv2<-tempout[,c("CpG","n",colnames(tempout)[grep(i,colnames(tempout))])]
colnames(tempoutv2)<-sapply(strsplit(colnames(tempoutv2),"_"), function(x) x[1])
templambda = qchisq(median(tempoutv2$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
lambda[i]<-templambda
tempoutplots<-na.omit(tempoutv2)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title=paste("Adjusted_Analysis_with_Cell_Type_Males",i,sep="_"),
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
} else {
lambda = qchisq(median(tempout$pval,na.rm=T), df = 1, lower.tail = F)/
qchisq(0.5, 1)
tempoutplots<-na.omit(tempout)
if(nrow(tempoutplots)>20){
runallplots(fitinfo=tempoutplots,ntop=20,annotdat=annotdat,betafinal=betafinal,
finalpheno=finalpheno,title="Adjusted_Analysis_with_Cell_Type_Males",
varofinterest=varofinterest,vartype=vartype,
cohort=cohort,analysisdate=analysisdate)
}
}
alldataout$AdjustedwithCellTypeMales<-tempout
alllambda$AdjustedwithCellTypeMales<-lambda
} else {
alldataout$AdjustedwithCellTypeMales<-NA
alllambda$AdjustedwithCellTypeMales<-NA
}
}
}
}
## Run cell-type interaction model?
if(RunCellTypeInteract){
## Adjusted model
cat("Running cell-type interaction models...","\n")
## This model cannot handle missing
## imputing missing with mean for that CpG locus
tempbetasint<-betafinal
kmiss <- which(is.na(tempbetasint), arr.ind=TRUE)
tempbetasint[kmiss] <- rowMeans(tempbetasint, na.rm=TRUE)[kmiss[,1]]
## Must make sure there is no missing in the adjustment variables
## or the outcome variable
tempdatanalysis<-finalpheno[,c("Basename",varofinterest,adjustmentvariables)]
tempdatanalysis$OutputVar<-tempdatanalysis[,varofinterest]
rownames(tempdatanalysis)<-as.character(tempdatanalysis$Basename)
tempdatanalysis<-na.omit(tempdatanalysis)
## Make sure the beta matrix is the same samples
tempbetasint<-tempbetasint[,rownames(tempdatanalysis)]
## Make sure the Omega matrix is the same samples
tempOmegaint<-Omega[rownames(tempdatanalysis),]
if(!is.null(adjustmentvariables)){
tempmodinfo<-paste(adjustmentvariables,collapse = "+")
tempmodinfo<-paste("~",tempmodinfo,sep="")
tempmodinfo<-model.matrix(as.formula(tempmodinfo),data=tempdatanalysis)
celldmc.o <- EpiDISH::CellDMC(beta.m=tempbetasint, pheno.v=tempdatanalysis$OutputVar, frac.m=tempOmegaint,
cov.mod=tempmodinfo,adjPThresh=0.05)
} else {
celldmc.o <- EpiDISH::CellDMC(beta.m=tempbetasint, pheno.v=tempdatanalysis$OutputVar, frac.m=tempOmegaint,
adjPThresh=0.05)
}
alldataout$CellInteraction<-celldmc.o
}
OutputnameFileName<-paste(cohort,"_",analysisdate,"_",varofinterest,sep="")
if(!is.null(analysisname)) OutputnameFileName<-paste(OutputnameFileName,"_",analysisname,sep="")
save(file=paste(OutputnameFileName,"_lambdas.RData",sep=""),compress=TRUE, list=c("alllambda"))
save(file=paste(OutputnameFileName,"_allanalyses.RData",sep=""),compress=TRUE, list=c("alldataout"))
if(savelog){
sink()
sink(type="message")
}
return(alldataout)
}
## analysis across all race/ethnicities, adjusting for race/ethnicity
tempresults<-dataAnalysis(phenofinal=temppheno,
betafinal=betafinal.nooutlier[1:100,],
array="450K",
maxit=100,
Omega=processedOut$Omega,
vartype="OutcomeCont",
robust=TRUE,
varofinterest="BWT",
Table1vars=c("Gestage","Sex","AGE","paritycat","SmokeCat","preBMI","Ethnic"),
StratifyTable1=TRUE,
StratifyTable1var="Sex",
adjustmentvariables=c("Gestage","Sex","AGE","paritycat","SmokeCat","preBMI","Ethnic","Meanlog2oddsContamination"),
RunUnadjusted=TRUE,
RunAdjusted=TRUE,
RunCellTypeAdjusted=TRUE,
RunSexSpecific=FALSE,
RunCellTypeInteract=FALSE,
RestrictToSubset=FALSE,
RestrictionVar=NULL,
RestrictToIndicator=NULL,
destinationfolder="E:\\PACE\\Birthweight-placenta\\HEBC_BirthSize_Analysis",
savelog=TRUE,
cohort="HEBC",analysisdate="20210616",analysisname="full_adjustingcontamination")
